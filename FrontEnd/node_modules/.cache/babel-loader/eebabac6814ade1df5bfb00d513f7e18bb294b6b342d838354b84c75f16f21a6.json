{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef } from 'react';\nimport { GoogleMap, Polyline, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '700px'\n};\nfunction Map({\n  route,\n  isUserRoute\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n\n    // Fit the map to the route\n    if (route && route.length > 0) {\n      const bounds = new window.google.maps.LatLngBounds();\n      route.forEach(point => bounds.extend(point));\n      map.fitBounds(bounds);\n    }\n  }, [route]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    onLoad: onLoad,\n    options: {\n      disableDefaultUI: true,\n      zoomControl: true,\n      minZoom: 2,\n      maxZoom: 20\n    },\n    children: [route && route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n      path: route,\n      options: {\n        strokeColor: isUserRoute ? '#00FF00' : '#0000FF',\n        // Green for user route, blue for selected route\n        strokeOpacity: 0.7,\n        strokeWeight: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), route && route.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: point,\n      label: (index + 1).toString(),\n      title: `Airport ${index + 1}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"WYjahiVxY8sTdszoIOcK2iNaRlQ=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useRef","GoogleMap","Polyline","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","Map","route","isUserRoute","_s","mapRef","onLoad","map","current","length","bounds","window","google","maps","LatLngBounds","forEach","point","extend","fitBounds","mapContainerStyle","options","disableDefaultUI","zoomControl","minZoom","maxZoom","children","path","strokeColor","strokeOpacity","strokeWeight","fileName","_jsxFileName","lineNumber","columnNumber","index","position","label","toString","title","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/Map.jsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react';\r\nimport { GoogleMap, Polyline, Marker } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '700px',\r\n};\r\n\r\nfunction Map({ route, isUserRoute }) {\r\n    const mapRef = useRef(null);\r\n\r\n    const onLoad = useCallback((map) => {\r\n        mapRef.current = map;\r\n\r\n        // Fit the map to the route\r\n        if (route && route.length > 0) {\r\n            const bounds = new window.google.maps.LatLngBounds();\r\n            route.forEach((point) => bounds.extend(point));\r\n            map.fitBounds(bounds);\r\n        }\r\n    }, [route]);\r\n\r\n    return (\r\n        <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            onLoad={onLoad}\r\n            options={{\r\n                disableDefaultUI: true,\r\n                zoomControl: true,\r\n                minZoom: 2,\r\n                maxZoom: 20,\r\n            }}\r\n        >\r\n            {/* Draw the route polyline */}\r\n            {route && route.length > 0 && (\r\n                <Polyline\r\n                    path={route}\r\n                    options={{\r\n                        strokeColor: isUserRoute ? '#00FF00' : '#0000FF', // Green for user route, blue for selected route\r\n                        strokeOpacity: 0.7,\r\n                        strokeWeight: 5,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* Add markers for airports */}\r\n            {route &&\r\n                route.map((point, index) => (\r\n                    <Marker\r\n                        key={index}\r\n                        position={point}\r\n                        label={(index + 1).toString()}\r\n                        title={`Airport ${index + 1}`}\r\n                    />\r\n                ))}\r\n        </GoogleMap>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACZ,CAAC;AAED,SAASC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAMC,MAAM,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAMc,MAAM,GAAGf,WAAW,CAAEgB,GAAG,IAAK;IAChCF,MAAM,CAACG,OAAO,GAAGD,GAAG;;IAEpB;IACA,IAAIL,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC;MACpDZ,KAAK,CAACa,OAAO,CAAEC,KAAK,IAAKN,MAAM,CAACO,MAAM,CAACD,KAAK,CAAC,CAAC;MAC9CT,GAAG,CAACW,SAAS,CAACR,MAAM,CAAC;IACzB;EACJ,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,oBACIL,OAAA,CAACJ,SAAS;IACN0B,iBAAiB,EAAErB,cAAe;IAClCQ,MAAM,EAAEA,MAAO;IACfc,OAAO,EAAE;MACLC,gBAAgB,EAAE,IAAI;MACtBC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE;IACb,CAAE;IAAAC,QAAA,GAGDvB,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,iBACtBZ,OAAA,CAACH,QAAQ;MACLgC,IAAI,EAAExB,KAAM;MACZkB,OAAO,EAAE;QACLO,WAAW,EAAExB,WAAW,GAAG,SAAS,GAAG,SAAS;QAAE;QAClDyB,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE;MAClB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACJ,EAGA/B,KAAK,IACFA,KAAK,CAACK,GAAG,CAAC,CAACS,KAAK,EAAEkB,KAAK,kBACnBrC,OAAA,CAACF,MAAM;MAEHwC,QAAQ,EAAEnB,KAAM;MAChBoB,KAAK,EAAE,CAACF,KAAK,GAAG,CAAC,EAAEG,QAAQ,CAAC,CAAE;MAC9BC,KAAK,EAAE,WAAWJ,KAAK,GAAG,CAAC;IAAG,GAHzBA,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB;AAAC7B,EAAA,CAjDQH,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}