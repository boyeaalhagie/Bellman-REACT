{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef } from 'react';\nimport { GoogleMap, LoadScript, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '50%',\n  height: '400px'\n};\nfunction Map({\n  routes\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n\n    // Create bounds for the map\n    const bounds = new window.google.maps.LatLngBounds();\n    routes.forEach(route => route.forEach(point => bounds.extend(point)));\n\n    // Fit the map to these bounds\n    map.fitBounds(bounds);\n  }, [routes]);\n  const routeColors = ['#0000FF', '#FF0000', '#008000']; // Blue, Red, Green for 3 routes\n\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAWKY1m0h2NlZh6_WBgowVA87u516kWVfQ\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      onLoad: onLoad,\n      options: {\n        disableDefaultUI: true,\n        zoomControl: true,\n        minZoom: 4,\n        maxZoom: 20\n      },\n      children: routes.map((route, index) => /*#__PURE__*/_jsxDEV(Polyline, {\n        path: route,\n        options: {\n          strokeColor: routeColors[index] || '#000000',\n          strokeOpacity: 0.7,\n          strokeWeight: 5\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"WYjahiVxY8sTdszoIOcK2iNaRlQ=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useRef","GoogleMap","LoadScript","Polyline","jsxDEV","_jsxDEV","containerStyle","width","height","Map","routes","_s","mapRef","onLoad","map","current","bounds","window","google","maps","LatLngBounds","forEach","route","point","extend","fitBounds","routeColors","googleMapsApiKey","children","mapContainerStyle","options","disableDefaultUI","zoomControl","minZoom","maxZoom","index","path","strokeColor","strokeOpacity","strokeWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/Map.jsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Polyline } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '50%',\r\n    height: '400px',\r\n};\r\n\r\nfunction Map({ routes }) {\r\n    const mapRef = useRef(null);\r\n\r\n    const onLoad = useCallback((map) => {\r\n        mapRef.current = map;\r\n\r\n        // Create bounds for the map\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        routes.forEach((route) =>\r\n            route.forEach((point) => bounds.extend(point))\r\n        );\r\n\r\n        // Fit the map to these bounds\r\n        map.fitBounds(bounds);\r\n    }, [routes]);\r\n\r\n    const routeColors = ['#0000FF', '#FF0000', '#008000']; // Blue, Red, Green for 3 routes\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"AIzaSyAWKY1m0h2NlZh6_WBgowVA87u516kWVfQ\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                onLoad={onLoad}\r\n                options={{\r\n                    disableDefaultUI: true,\r\n                    zoomControl: true,\r\n                    minZoom: 4,\r\n                    maxZoom: 20,\r\n                }}\r\n            >\r\n                {routes.map((route, index) => (\r\n                    <Polyline\r\n                        key={index}\r\n                        path={route}\r\n                        options={{\r\n                            strokeColor: routeColors[index] || '#000000',\r\n                            strokeOpacity: 0.7,\r\n                            strokeWeight: 5,\r\n                        }}\r\n                    />\r\n                ))}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE;AACZ,CAAC;AAED,SAASC,GAAGA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAMa,MAAM,GAAGd,WAAW,CAAEe,GAAG,IAAK;IAChCF,MAAM,CAACG,OAAO,GAAGD,GAAG;;IAEpB;IACA,MAAME,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC;IACpDV,MAAM,CAACW,OAAO,CAAEC,KAAK,IACjBA,KAAK,CAACD,OAAO,CAAEE,KAAK,IAAKP,MAAM,CAACQ,MAAM,CAACD,KAAK,CAAC,CACjD,CAAC;;IAED;IACAT,GAAG,CAACW,SAAS,CAACT,MAAM,CAAC;EACzB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,MAAMgB,WAAW,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;;EAEvD,oBACIrB,OAAA,CAACH,UAAU;IAACyB,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eAClEvB,OAAA,CAACJ,SAAS;MACN4B,iBAAiB,EAAEvB,cAAe;MAClCO,MAAM,EAAEA,MAAO;MACfiB,OAAO,EAAE;QACLC,gBAAgB,EAAE,IAAI;QACtBC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE;MACb,CAAE;MAAAN,QAAA,EAEDlB,MAAM,CAACI,GAAG,CAAC,CAACQ,KAAK,EAAEa,KAAK,kBACrB9B,OAAA,CAACF,QAAQ;QAELiC,IAAI,EAAEd,KAAM;QACZQ,OAAO,EAAE;UACLO,WAAW,EAAEX,WAAW,CAACS,KAAK,CAAC,IAAI,SAAS;UAC5CG,aAAa,EAAE,GAAG;UAClBC,YAAY,EAAE;QAClB;MAAE,GANGJ,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB;AAAChC,EAAA,CA5CQF,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}