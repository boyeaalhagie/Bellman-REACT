{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map({\n  route\n}) {\n  _s();\n  const mapRef = useRef(null); // Reference for the map instance\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      // Initialize the map with bounds restricted to the US\n      mapRef.current = L.map('map', {\n        center: [39.8283, -98.5795],\n        // Center of the contiguous US\n        zoom: 4,\n        // Initial zoom level\n        maxBounds: [[24.396308, -125.0],\n        // Southwest corner of the US\n        [49.384358, -66.93457] // Northeast corner of the US\n        ],\n        maxBoundsViscosity: 1.0,\n        // Prevent dragging outside bounds\n        layers: [L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '© OpenStreetMap contributors'\n        })]\n      });\n    }\n    const map = mapRef.current;\n    const routeLayer = L.layerGroup().addTo(map); // Layer for the route\n\n    // Draw route if provided\n    if (route && route.length > 0) {\n      const coordinates = route.map(airport => [airport.lat, airport.long]);\n\n      // Add polyline for the route\n      const polyline = L.polyline(coordinates, {\n        color: 'blue',\n        weight: 5,\n        opacity: 0.7\n      }).addTo(routeLayer);\n\n      // Fit the map to the bounds of the route\n      map.fitBounds(polyline.getBounds());\n    }\n\n    // Cleanup the route layer (not the map instance) on re-render\n    return () => {\n      routeLayer.clearLayers();\n    };\n  }, [route]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '400px',\n      width: '100%',\n      border: '1px solid #ccc',\n      borderRadius: '8px',\n      overflow: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","Map","route","_s","mapRef","current","map","center","zoom","maxBounds","maxBoundsViscosity","layers","tileLayer","attribution","routeLayer","layerGroup","addTo","length","coordinates","airport","lat","long","polyline","color","weight","opacity","fitBounds","getBounds","clearLayers","id","style","height","width","border","borderRadius","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/Map.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport L from 'leaflet';\r\n\r\nfunction Map({ route }) {\r\n    const mapRef = useRef(null); // Reference for the map instance\r\n\r\n    useEffect(() => {\r\n        if (!mapRef.current) {\r\n            // Initialize the map with bounds restricted to the US\r\n            mapRef.current = L.map('map', {\r\n                center: [39.8283, -98.5795], // Center of the contiguous US\r\n                zoom: 4, // Initial zoom level\r\n                maxBounds: [\r\n                    [24.396308, -125.0], // Southwest corner of the US\r\n                    [49.384358, -66.93457], // Northeast corner of the US\r\n                ],\r\n                maxBoundsViscosity: 1.0, // Prevent dragging outside bounds\r\n                layers: [\r\n                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                        attribution: '© OpenStreetMap contributors',\r\n                    }),\r\n                ],\r\n            });\r\n        }\r\n\r\n        const map = mapRef.current;\r\n        const routeLayer = L.layerGroup().addTo(map); // Layer for the route\r\n\r\n        // Draw route if provided\r\n        if (route && route.length > 0) {\r\n            const coordinates = route.map((airport) => [airport.lat, airport.long]);\r\n\r\n            // Add polyline for the route\r\n            const polyline = L.polyline(coordinates, {\r\n                color: 'blue',\r\n                weight: 5,\r\n                opacity: 0.7,\r\n            }).addTo(routeLayer);\r\n\r\n            // Fit the map to the bounds of the route\r\n            map.fitBounds(polyline.getBounds());\r\n        }\r\n\r\n        // Cleanup the route layer (not the map instance) on re-render\r\n        return () => {\r\n            routeLayer.clearLayers();\r\n        };\r\n    }, [route]);\r\n\r\n    return (\r\n        <div\r\n            id=\"map\"\r\n            style={{\r\n                height: '400px',\r\n                width: '100%',\r\n                border: '1px solid #ccc',\r\n                borderRadius: '8px',\r\n                overflow: 'hidden',\r\n            }}\r\n        ></div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,CAAC,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,GAAGA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE7BD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,MAAM,CAACC,OAAO,EAAE;MACjB;MACAD,MAAM,CAACC,OAAO,GAAGP,CAAC,CAACQ,GAAG,CAAC,KAAK,EAAE;QAC1BC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;QAAE;QAC7BC,IAAI,EAAE,CAAC;QAAE;QACTC,SAAS,EAAE,CACP,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC;QAAE;QACrB,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAE;QAAA,CAC3B;QACDC,kBAAkB,EAAE,GAAG;QAAE;QACzBC,MAAM,EAAE,CACJb,CAAC,CAACc,SAAS,CAAC,oDAAoD,EAAE;UAC9DC,WAAW,EAAE;QACjB,CAAC,CAAC;MAEV,CAAC,CAAC;IACN;IAEA,MAAMP,GAAG,GAAGF,MAAM,CAACC,OAAO;IAC1B,MAAMS,UAAU,GAAGhB,CAAC,CAACiB,UAAU,CAAC,CAAC,CAACC,KAAK,CAACV,GAAG,CAAC,CAAC,CAAC;;IAE9C;IACA,IAAIJ,KAAK,IAAIA,KAAK,CAACe,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,WAAW,GAAGhB,KAAK,CAACI,GAAG,CAAEa,OAAO,IAAK,CAACA,OAAO,CAACC,GAAG,EAAED,OAAO,CAACE,IAAI,CAAC,CAAC;;MAEvE;MACA,MAAMC,QAAQ,GAAGxB,CAAC,CAACwB,QAAQ,CAACJ,WAAW,EAAE;QACrCK,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,CAAC;QACTC,OAAO,EAAE;MACb,CAAC,CAAC,CAACT,KAAK,CAACF,UAAU,CAAC;;MAEpB;MACAR,GAAG,CAACoB,SAAS,CAACJ,QAAQ,CAACK,SAAS,CAAC,CAAC,CAAC;IACvC;;IAEA;IACA,OAAO,MAAM;MACTb,UAAU,CAACc,WAAW,CAAC,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,CAAC1B,KAAK,CAAC,CAAC;EAEX,oBACIF,OAAA;IACI6B,EAAE,EAAC,KAAK;IACRC,KAAK,EAAE;MACHC,MAAM,EAAE,OAAO;MACfC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE;IACd;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACpC,EAAA,CA1DQF,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}