{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\ResultTable.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultTable({\n  results,\n  onRowClick\n}) {\n  _s();\n  const [expandedRow, setExpandedRow] = useState(null);\n  const [filterByTopAirports, setFilterByTopAirports] = useState(false);\n  if (!results) return null;\n  const {\n    userRoute,\n    shortestPath,\n    shortestDistance,\n    alternativeRoutes\n  } = results;\n  const formatRouteIATA = route => route.join(' -> ');\n  const filterRoutes = routes => {\n    if (!filterByTopAirports) return routes;\n    return routes.filter(route => {\n      const connectingFlights = route.rawRoute.slice(1, -1);\n      return connectingFlights.every(code => topAirports.some(airport => airport.IATA === code));\n    });\n  };\n  const userRouteRow = userRoute ? {\n    route: formatRouteIATA(userRoute.route),\n    distance: Number(userRoute.distance) || 0,\n    // Ensure distance is a number\n    rawRoute: userRoute.route\n  } : null;\n  const shortestPathRow = {\n    route: formatRouteIATA(shortestPath),\n    distance: Number(shortestDistance) || 0,\n    // Ensure distance is a number\n    rawRoute: shortestPath\n  };\n  const alternativeRouteRows = alternativeRoutes.sort((a, b) => a.distance - b.distance).map(route => ({\n    route: formatRouteIATA(route.route),\n    distance: Number(route.distance) || 0,\n    // Ensure distance is a number\n    rawRoute: route.route\n  }));\n  const allRows = [...(userRouteRow ? [userRouteRow] : []), shortestPathRow, ...alternativeRouteRows];\n  const tableRows = filterRoutes(allRows);\n  const toggleRow = index => {\n    setExpandedRow(expandedRow === index ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Route Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Distance (miles)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableRows.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => onRowClick(row.rawRoute),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.distance.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), expandedRow === index && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Connecting Flights:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: row.rawRoute.slice(1, -1).map((code, idx) => {\n                      const airport = airports.find(airport => airport.IATA === code);\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: airport ? `${code} - ${airport.NAME}, ${airport.CITY}, ${airport.STATE}` : `${code} - Unknown Airport`\n                      }, idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 61\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(ResultTable, \"Z7OnJl2H1RflkQr0QG/3UGUvHDw=\");\n_c = ResultTable;\nexport default ResultTable;\nvar _c;\n$RefreshReg$(_c, \"ResultTable\");","map":{"version":3,"names":["ResultTable","results","onRowClick","_s","expandedRow","setExpandedRow","useState","filterByTopAirports","setFilterByTopAirports","userRoute","shortestPath","shortestDistance","alternativeRoutes","formatRouteIATA","route","join","filterRoutes","routes","filter","connectingFlights","rawRoute","slice","every","code","topAirports","some","airport","IATA","userRouteRow","distance","Number","shortestPathRow","alternativeRouteRows","sort","a","b","map","allRows","tableRows","toggleRow","index","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","React","Fragment","onClick","toFixed","colSpan","idx","airports","find","NAME","CITY","STATE","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/ResultTable.jsx"],"sourcesContent":["function ResultTable({ results, onRowClick }) {\r\n    const [expandedRow, setExpandedRow] = useState(null);\r\n    const [filterByTopAirports, setFilterByTopAirports] = useState(false);\r\n\r\n    if (!results) return null;\r\n\r\n    const { userRoute, shortestPath, shortestDistance, alternativeRoutes } = results;\r\n\r\n    const formatRouteIATA = (route) => route.join(' -> ');\r\n\r\n    const filterRoutes = (routes) => {\r\n        if (!filterByTopAirports) return routes;\r\n\r\n        return routes.filter((route) => {\r\n            const connectingFlights = route.rawRoute.slice(1, -1);\r\n            return connectingFlights.every((code) =>\r\n                topAirports.some((airport) => airport.IATA === code)\r\n            );\r\n        });\r\n    };\r\n\r\n    const userRouteRow = userRoute\r\n        ? {\r\n              route: formatRouteIATA(userRoute.route),\r\n              distance: Number(userRoute.distance) || 0, // Ensure distance is a number\r\n              rawRoute: userRoute.route,\r\n          }\r\n        : null;\r\n\r\n    const shortestPathRow = {\r\n        route: formatRouteIATA(shortestPath),\r\n        distance: Number(shortestDistance) || 0, // Ensure distance is a number\r\n        rawRoute: shortestPath,\r\n    };\r\n\r\n    const alternativeRouteRows = alternativeRoutes\r\n        .sort((a, b) => a.distance - b.distance)\r\n        .map((route) => ({\r\n            route: formatRouteIATA(route.route),\r\n            distance: Number(route.distance) || 0, // Ensure distance is a number\r\n            rawRoute: route.route,\r\n        }));\r\n\r\n    const allRows = [\r\n        ...(userRouteRow ? [userRouteRow] : []),\r\n        shortestPathRow,\r\n        ...alternativeRouteRows,\r\n    ];\r\n\r\n    const tableRows = filterRoutes(allRows);\r\n\r\n    const toggleRow = (index) => {\r\n        setExpandedRow(expandedRow === index ? null : index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"result-table\">\r\n            <h2>All Route Results</h2>\r\n            <div className=\"table-container\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Route</th>\r\n                            <th>Distance (miles)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableRows.map((row, index) => (\r\n                            <React.Fragment key={index}>\r\n                                <tr onClick={() => onRowClick(row.rawRoute)}>\r\n                                    <td>{row.route}</td>\r\n                                    <td>{row.distance.toFixed(2)}</td>\r\n                                </tr>\r\n                                {expandedRow === index && (\r\n                                    <tr>\r\n                                        <td colSpan=\"2\">\r\n                                            <div className=\"details\">\r\n                                                <strong>Connecting Flights:</strong>\r\n                                                <ul>\r\n                                                    {row.rawRoute.slice(1, -1).map((code, idx) => {\r\n                                                        const airport = airports.find(\r\n                                                            (airport) => airport.IATA === code\r\n                                                        );\r\n                                                        return (\r\n                                                            <li key={idx}>\r\n                                                                {airport\r\n                                                                    ? `${code} - ${airport.NAME}, ${airport.CITY}, ${airport.STATE}`\r\n                                                                    : `${code} - Unknown Airport`}\r\n                                                            </li>\r\n                                                        );\r\n                                                    })}\r\n                                                </ul>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}