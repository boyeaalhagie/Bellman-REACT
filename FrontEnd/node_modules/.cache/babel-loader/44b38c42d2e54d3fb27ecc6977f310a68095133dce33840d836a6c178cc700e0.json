{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef } from 'react';\nimport { GoogleMap, LoadScript, Polyline, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nfunction Map({\n  route,\n  markers\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n\n    // Adjust map bounds based on route and markers\n    const bounds = new window.google.maps.LatLngBounds();\n    route.forEach(point => bounds.extend(point));\n    markers.forEach(marker => bounds.extend({\n      lat: marker.lat,\n      lng: marker.lng\n    }));\n    map.fitBounds(bounds);\n  }, [route, markers]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    onLoad: onLoad,\n    options: {\n      disableDefaultUI: true,\n      zoomControl: true\n    },\n    children: [route && /*#__PURE__*/_jsxDEV(Polyline, {\n      path: route,\n      options: {\n        strokeColor: '#0000FF',\n        strokeOpacity: 0.7,\n        strokeWeight: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      label: marker.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"WYjahiVxY8sTdszoIOcK2iNaRlQ=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useRef","GoogleMap","LoadScript","Polyline","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","Map","route","markers","_s","mapRef","onLoad","map","current","bounds","window","google","maps","LatLngBounds","forEach","point","extend","marker","lat","lng","fitBounds","mapContainerStyle","options","disableDefaultUI","zoomControl","children","path","strokeColor","strokeOpacity","strokeWeight","fileName","_jsxFileName","lineNumber","columnNumber","index","position","label","name","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/Map.jsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Polyline, Marker } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '400px',\r\n};\r\n\r\nfunction Map({ route, markers }) {\r\n    const mapRef = useRef(null);\r\n\r\n    const onLoad = useCallback((map) => {\r\n        mapRef.current = map;\r\n\r\n        // Adjust map bounds based on route and markers\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        route.forEach((point) => bounds.extend(point));\r\n        markers.forEach((marker) => bounds.extend({ lat: marker.lat, lng: marker.lng }));\r\n\r\n        map.fitBounds(bounds);\r\n    }, [route, markers]);\r\n\r\n    return (\r\n        <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            onLoad={onLoad}\r\n            options={{\r\n                disableDefaultUI: true,\r\n                zoomControl: true,\r\n            }}\r\n        >\r\n            {/* Draw the route */}\r\n            {route && (\r\n                <Polyline\r\n                    path={route}\r\n                    options={{\r\n                        strokeColor: '#0000FF',\r\n                        strokeOpacity: 0.7,\r\n                        strokeWeight: 5,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {/* Add markers for connecting flights */}\r\n            {markers.map((marker, index) => (\r\n                <Marker\r\n                    key={index}\r\n                    position={{ lat: marker.lat, lng: marker.lng }}\r\n                    label={marker.name}\r\n                />\r\n            ))}\r\n        </GoogleMap>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACZ,CAAC;AAED,SAASC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAMC,MAAM,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAMe,MAAM,GAAGhB,WAAW,CAAEiB,GAAG,IAAK;IAChCF,MAAM,CAACG,OAAO,GAAGD,GAAG;;IAEpB;IACA,MAAME,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC;IACpDX,KAAK,CAACY,OAAO,CAAEC,KAAK,IAAKN,MAAM,CAACO,MAAM,CAACD,KAAK,CAAC,CAAC;IAC9CZ,OAAO,CAACW,OAAO,CAAEG,MAAM,IAAKR,MAAM,CAACO,MAAM,CAAC;MAAEE,GAAG,EAAED,MAAM,CAACC,GAAG;MAAEC,GAAG,EAAEF,MAAM,CAACE;IAAI,CAAC,CAAC,CAAC;IAEhFZ,GAAG,CAACa,SAAS,CAACX,MAAM,CAAC;EACzB,CAAC,EAAE,CAACP,KAAK,EAAEC,OAAO,CAAC,CAAC;EAEpB,oBACIN,OAAA,CAACL,SAAS;IACN6B,iBAAiB,EAAEvB,cAAe;IAClCQ,MAAM,EAAEA,MAAO;IACfgB,OAAO,EAAE;MACLC,gBAAgB,EAAE,IAAI;MACtBC,WAAW,EAAE;IACjB,CAAE;IAAAC,QAAA,GAGDvB,KAAK,iBACFL,OAAA,CAACH,QAAQ;MACLgC,IAAI,EAAExB,KAAM;MACZoB,OAAO,EAAE;QACLK,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE;MAClB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACJ,EAGA9B,OAAO,CAACI,GAAG,CAAC,CAACU,MAAM,EAAEiB,KAAK,kBACvBrC,OAAA,CAACF,MAAM;MAEHwC,QAAQ,EAAE;QAAEjB,GAAG,EAAED,MAAM,CAACC,GAAG;QAAEC,GAAG,EAAEF,MAAM,CAACE;MAAI,CAAE;MAC/CiB,KAAK,EAAEnB,MAAM,CAACoB;IAAK,GAFdH,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGb,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;AAAC7B,EAAA,CA7CQH,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}