{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\AirportDropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport './AirportDropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AirportDropdown({\n  label,\n  onSelect\n}) {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [airports, setAirports] = useState([]);\n  useEffect(() => {\n    fetch('/path/to/airports.json').then(response => response.json()).then(data => {\n      // Sort airports alphabetically by NAME\n      const sortedAirports = data.sort((a, b) => a.NAME.localeCompare(b.NAME));\n\n      // Map data to options format required by React-Select\n      const formattedOptions = sortedAirports.map(airport => ({\n        value: airport.IATA,\n        label: `${airport.IATA} - ${airport.NAME}`\n      }));\n      setAirports(sortedAirports);\n      setOptions(formattedOptions);\n    }).catch(err => console.error('Failed to fetch airports:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"dropdown-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"dropdown-select\",\n      options: options,\n      onChange: selectedOption => onSelect(selectedOption.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(AirportDropdown, \"V4scY7qn+RTPbWcPJ0eUcWAg7OQ=\");\n_c = AirportDropdown;\nexport default AirportDropdown;\nvar _c;\n$RefreshReg$(_c, \"AirportDropdown\");","map":{"version":3,"names":["React","useState","useEffect","Select","jsxDEV","_jsxDEV","AirportDropdown","label","onSelect","_s","options","setOptions","airports","setAirports","fetch","then","response","json","data","sortedAirports","sort","a","b","NAME","localeCompare","formattedOptions","map","airport","value","IATA","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","selectedOption","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/AirportDropdown.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport './AirportDropdown.css';\r\n\r\nfunction AirportDropdown({ label, onSelect }) {\r\n    const [options, setOptions] = useState([]);\r\n    const [airports, setAirports] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('/path/to/airports.json')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                // Sort airports alphabetically by NAME\r\n                const sortedAirports = data.sort((a, b) => a.NAME.localeCompare(b.NAME));\r\n\r\n                // Map data to options format required by React-Select\r\n                const formattedOptions = sortedAirports.map((airport) => ({\r\n                    value: airport.IATA,\r\n                    label: `${airport.IATA} - ${airport.NAME}`,\r\n                }));\r\n\r\n                setAirports(sortedAirports);\r\n                setOptions(formattedOptions);\r\n            })\r\n            .catch((err) => console.error('Failed to fetch airports:', err));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"dropdown-container\">\r\n            <label className=\"dropdown-label\">{label}</label>\r\n            <Select\r\n                className=\"dropdown-select\"\r\n                options={options}\r\n                onChange={(selectedOption) => onSelect(selectedOption.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AirportDropdown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,eAAeA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,wBAAwB,CAAC,CAC1BC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ;MACA,MAAMC,cAAc,GAAGD,IAAI,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC;;MAExE;MACA,MAAME,gBAAgB,GAAGN,cAAc,CAACO,GAAG,CAAEC,OAAO,KAAM;QACtDC,KAAK,EAAED,OAAO,CAACE,IAAI;QACnBtB,KAAK,EAAE,GAAGoB,OAAO,CAACE,IAAI,MAAMF,OAAO,CAACJ,IAAI;MAC5C,CAAC,CAAC,CAAC;MAEHV,WAAW,CAACM,cAAc,CAAC;MAC3BR,UAAU,CAACc,gBAAgB,CAAC;IAChC,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI1B,OAAA;IAAK6B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/B9B,OAAA;MAAO6B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAE5B;IAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDlC,OAAA,CAACF,MAAM;MACH+B,SAAS,EAAC,iBAAiB;MAC3BxB,OAAO,EAAEA,OAAQ;MACjB8B,QAAQ,EAAGC,cAAc,IAAKjC,QAAQ,CAACiC,cAAc,CAACb,KAAK;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC9B,EAAA,CAjCQH,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AAmCxB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}