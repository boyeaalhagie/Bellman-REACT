{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\ResultTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultTable({\n  start,\n  end\n}) {\n  _s();\n  const [results, setResults] = useState(null); // To store the results from the backend\n  const [loading, setLoading] = useState(false); // To indicate loading state\n  const [error, setError] = useState(null); // To handle errors\n\n  useEffect(() => {\n    const fetchResults = async () => {\n      if (!start || !end) {\n        setError('Please provide both starting and destination airports.');\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        // Fetch results from the backend API\n        const response = await fetch(`/api/shortest-path?start=${start}&end=${end}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error: ${response.status}`);\n        }\n        const data = await response.json();\n        setResults(data); // Set the backend response to the state\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Trigger the backend call when start or end changes\n    fetchResults();\n  }, [start, end]);\n\n  // Render based on different states\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading results...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  if (!results) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results available yet. Please calculate a route.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Route Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Distance (miles)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: results.path.join(' -> ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: results.distance.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(ResultTable, \"0ZD+3HNn8QNUSBVto4/1S7Qjra4=\");\n_c = ResultTable;\nexport default ResultTable;\nvar _c;\n$RefreshReg$(_c, \"ResultTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ResultTable","start","end","_s","results","setResults","loading","setLoading","error","setError","fetchResults","response","fetch","ok","Error","status","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","path","join","distance","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/ResultTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction ResultTable({ start, end }) {\r\n    const [results, setResults] = useState(null); // To store the results from the backend\r\n    const [loading, setLoading] = useState(false); // To indicate loading state\r\n    const [error, setError] = useState(null); // To handle errors\r\n\r\n    useEffect(() => {\r\n        const fetchResults = async () => {\r\n            if (!start || !end) {\r\n                setError('Please provide both starting and destination airports.');\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            setError(null);\r\n\r\n            try {\r\n                // Fetch results from the backend API\r\n                const response = await fetch(`/api/shortest-path?start=${start}&end=${end}`);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setResults(data); // Set the backend response to the state\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        // Trigger the backend call when start or end changes\r\n        fetchResults();\r\n    }, [start, end]);\r\n\r\n    // Render based on different states\r\n    if (loading) {\r\n        return <p>Loading results...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p style={{ color: 'red' }}>{error}</p>;\r\n    }\r\n\r\n    if (!results) {\r\n        return <p>No results available yet. Please calculate a route.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"result-table\">\r\n            <h2>Route Results</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Route</th>\r\n                        <th>Distance (miles)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{results.path.join(' -> ')}</td>\r\n                        <td>{results.distance.toFixed(2)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}