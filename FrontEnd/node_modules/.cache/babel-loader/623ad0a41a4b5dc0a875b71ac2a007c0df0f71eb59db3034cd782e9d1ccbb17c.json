{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LoadScript } from '@react-google-maps/api';\nimport AirportDropdown from './components/AirportDropdown';\nimport RouteForm from './components/RouteForm';\nimport Map from './components/Map';\nimport ResultTable from './components/ResultTable';\nimport airports from './data/airports.json'; // Import airport data for coordinates\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [routeResults, setRouteResults] = useState(null);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [markers, setMarkers] = useState([]);\n\n  // Handle row click\n  const handleRowClick = rawRoute => {\n    // Convert the selected route to coordinates\n    const routeCoordinates = rawRoute.map(code => {\n      const airport = airports.find(airport => airport.IATA === code);\n      return airport ? {\n        lat: airport.LAT,\n        lng: airport.LONG\n      } : null;\n    }).filter(Boolean); // Remove null values\n\n    // Extract connecting flights for markers\n    const connectingFlights = rawRoute.slice(1, -1).map(code => {\n      const airport = airports.find(airport => airport.IATA === code);\n      return airport ? {\n        lat: airport.LAT,\n        lng: airport.LONG,\n        name: airport.NAME\n      } : null;\n    }).filter(Boolean);\n    setSelectedRoute(routeCoordinates);\n    setMarkers(connectingFlights);\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shortest Flight Path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(AirportDropdown, {\n          label: \"Starting Airport\",\n          onSelect: setStart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AirportDropdown, {\n          label: \"Destination Airport\",\n          onSelect: setEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RouteForm, {\n          start: start,\n          end: end,\n          onResults: results => setRouteResults(results)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), routeResults && /*#__PURE__*/_jsxDEV(ResultTable, {\n        results: routeResults,\n        onRowClick: rawRoute => handleRowClick(rawRoute)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), selectedRoute && /*#__PURE__*/_jsxDEV(Map, {\n        route: selectedRoute,\n        markers: markers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"/FaStuhj5l9lzT3mTlxoOicR+qY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LoadScript","AirportDropdown","RouteForm","Map","ResultTable","airports","jsxDEV","_jsxDEV","App","_s","start","setStart","end","setEnd","routeResults","setRouteResults","selectedRoute","setSelectedRoute","markers","setMarkers","handleRowClick","rawRoute","routeCoordinates","map","code","airport","find","IATA","lat","LAT","lng","LONG","filter","Boolean","connectingFlights","slice","name","NAME","googleMapsApiKey","children","className","fileName","_jsxFileName","lineNumber","columnNumber","label","onSelect","onResults","results","onRowClick","route","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { LoadScript } from '@react-google-maps/api';\r\nimport AirportDropdown from './components/AirportDropdown';\r\nimport RouteForm from './components/RouteForm';\r\nimport Map from './components/Map';\r\nimport ResultTable from './components/ResultTable';\r\nimport airports from './data/airports.json'; // Import airport data for coordinates\r\nimport './styles.css';\r\n\r\nfunction App() {\r\n    const [start, setStart] = useState('');\r\n    const [end, setEnd] = useState('');\r\n    const [routeResults, setRouteResults] = useState(null);\r\n    const [selectedRoute, setSelectedRoute] = useState(null);\r\n    const [markers, setMarkers] = useState([]);\r\n\r\n    // Handle row click\r\n    const handleRowClick = (rawRoute) => {\r\n        // Convert the selected route to coordinates\r\n        const routeCoordinates = rawRoute.map((code) => {\r\n            const airport = airports.find((airport) => airport.IATA === code);\r\n            return airport ? { lat: airport.LAT, lng: airport.LONG } : null;\r\n        }).filter(Boolean); // Remove null values\r\n\r\n        // Extract connecting flights for markers\r\n        const connectingFlights = rawRoute.slice(1, -1).map((code) => {\r\n            const airport = airports.find((airport) => airport.IATA === code);\r\n            return airport ? { lat: airport.LAT, lng: airport.LONG, name: airport.NAME } : null;\r\n        }).filter(Boolean);\r\n\r\n        setSelectedRoute(routeCoordinates);\r\n        setMarkers(connectingFlights);\r\n    };\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\">\r\n            <div className=\"container\">\r\n                <h1>Shortest Flight Path</h1>\r\n                <div className=\"form-section\">\r\n                    <AirportDropdown label=\"Starting Airport\" onSelect={setStart} />\r\n                    <AirportDropdown label=\"Destination Airport\" onSelect={setEnd} />\r\n                    <RouteForm\r\n                        start={start}\r\n                        end={end}\r\n                        onResults={(results) => setRouteResults(results)}\r\n                    />\r\n                </div>\r\n                {routeResults && (\r\n                    <ResultTable\r\n                        results={routeResults}\r\n                        onRowClick={(rawRoute) => handleRowClick(rawRoute)}\r\n                    />\r\n                )}\r\n                {selectedRoute && <Map route={selectedRoute} markers={markers} />}\r\n            </div>\r\n        </LoadScript>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}