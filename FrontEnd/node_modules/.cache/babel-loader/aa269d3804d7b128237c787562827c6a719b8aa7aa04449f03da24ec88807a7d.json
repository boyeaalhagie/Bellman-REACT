{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef } from 'react';\nimport { GoogleMap, LoadScript, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '50%',\n  height: '400px',\n  border: '1px solid #ccc',\n  borderRadius: '8px'\n};\nconst center = {\n  lat: 39.8283,\n  // Center of the contiguous US\n  lng: -98.5795\n};\nfunction Map({\n  route\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n\n    // Set the zoom level to 4 to match the Leaflet map\n    map.setZoom(4);\n  }, [route]);\n  const fitBounds = useCallback(() => {\n    if (route && route.length > 0 && mapRef.current) {\n      const bounds = new window.google.maps.LatLngBounds();\n      route.forEach(airport => {\n        bounds.extend({\n          lat: airport.lat,\n          lng: airport.long\n        });\n      });\n      mapRef.current.fitBounds(bounds);\n    }\n  }, [route]);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAWKY1m0h2NlZh6_WBgowVA87u516kWVfQ\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 0,\n      onLoad: onLoad,\n      onTilesLoaded: fitBounds,\n      options: {\n        restriction: {\n          latLngBounds: {\n            north: 49.384358,\n            // North boundary\n            south: 24.396308,\n            // South boundary\n            west: -125.0,\n            // West boundary\n            east: -66.93457 // East boundary\n          },\n          strictBounds: true // Prevent dragging outside bounds\n        }\n      },\n      children: route && route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        path: route.map(airport => ({\n          lat: airport.lat,\n          lng: airport.long\n        })),\n        options: {\n          strokeColor: '#0000FF',\n          strokeOpacity: 0.7,\n          strokeWeight: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"Iv9mrsU718zs9wEMgxvHEMuQryY=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useRef","GoogleMap","LoadScript","Polyline","jsxDEV","_jsxDEV","containerStyle","width","height","border","borderRadius","center","lat","lng","Map","route","_s","mapRef","onLoad","map","current","setZoom","fitBounds","length","bounds","window","google","maps","LatLngBounds","forEach","airport","extend","long","googleMapsApiKey","children","mapContainerStyle","zoom","onTilesLoaded","options","restriction","latLngBounds","north","south","west","east","strictBounds","path","strokeColor","strokeOpacity","strokeWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/Map.jsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react';\r\nimport { GoogleMap, LoadScript, Polyline } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '50%',\r\n    height: '400px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n};\r\n\r\nconst center = {\r\n    lat: 39.8283, // Center of the contiguous US\r\n    lng: -98.5795,\r\n};\r\n\r\nfunction Map({ route }) {\r\n    const mapRef = useRef(null);\r\n\r\n    const onLoad = useCallback((map) => {\r\n        mapRef.current = map;\r\n        \r\n        // Set the zoom level to 4 to match the Leaflet map\r\n        map.setZoom(4);\r\n        \r\n        \r\n    }, [route]);\r\n\r\n    const fitBounds = useCallback(() => {\r\n        if (route && route.length > 0 && mapRef.current) {\r\n            const bounds = new window.google.maps.LatLngBounds();\r\n            route.forEach((airport) => {\r\n                bounds.extend({ lat: airport.lat, lng: airport.long });\r\n            });\r\n            mapRef.current.fitBounds(bounds);\r\n        }\r\n    }, [route]);\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"AIzaSyAWKY1m0h2NlZh6_WBgowVA87u516kWVfQ\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={0}\r\n                onLoad={onLoad}\r\n                onTilesLoaded={fitBounds}\r\n                options={{\r\n                    restriction: {\r\n                        latLngBounds: {\r\n                            north: 49.384358, // North boundary\r\n                            south: 24.396308, // South boundary\r\n                            west: -125.0, // West boundary\r\n                            east: -66.93457, // East boundary\r\n                        },\r\n                        strictBounds: true, // Prevent dragging outside bounds\r\n                    },\r\n                }}\r\n            >\r\n                {/* Draw route if available */}\r\n                {route && route.length > 0 && (\r\n                    <Polyline\r\n                        path={route.map((airport) => ({\r\n                            lat: airport.lat,\r\n                            lng: airport.long,\r\n                        }))}\r\n                        options={{\r\n                            strokeColor: '#0000FF',\r\n                            strokeOpacity: 0.7,\r\n                            strokeWeight: 5,\r\n                        }}\r\n                    />\r\n                )}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n}\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}