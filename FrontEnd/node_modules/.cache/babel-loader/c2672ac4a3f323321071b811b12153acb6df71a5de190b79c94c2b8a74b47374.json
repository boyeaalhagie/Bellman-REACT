{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\ResultTable.jsx\";\nimport React from 'react';\nimport '../styles/ResultTable.css'; // Add a CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultTable({\n  results\n}) {\n  if (!results) return null;\n\n  // Extract data from the results object\n  const {\n    userRoute,\n    shortestPath,\n    shortestDistance,\n    alternativeRoutes\n  } = results;\n\n  // Prepare the rows for the table\n  const userRouteRow = userRoute ? {\n    route: userRoute.route.join(' -> '),\n    distance: userRoute.distance\n  } : null;\n  const shortestPathRow = {\n    route: shortestPath.join(' -> '),\n    distance: shortestDistance\n  };\n  const sortedAlternativeRoutes = alternativeRoutes.sort((a, b) => a.distance - b.distance).slice(0, 5) // Limit to 5 alternative routes\n  .map((route, index) => ({\n    route: route.route.join(' -> '),\n    distance: route.distance\n  }));\n\n  // Combine all rows\n  const tableRows = [...(userRouteRow ? [userRouteRow] : []), shortestPathRow, ...sortedAlternativeRoutes];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Route Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Distance (miles)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableRows.slice(0, 7).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.route\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.distance.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c = ResultTable;\nexport default ResultTable;\nvar _c;\n$RefreshReg$(_c, \"ResultTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultTable","results","userRoute","shortestPath","shortestDistance","alternativeRoutes","userRouteRow","route","join","distance","shortestPathRow","sortedAlternativeRoutes","sort","a","b","slice","map","index","tableRows","className","children","fileName","_jsxFileName","lineNumber","columnNumber","row","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/ResultTable.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../styles/ResultTable.css'; // Add a CSS file for styles\r\n\r\nfunction ResultTable({ results }) {\r\n    if (!results) return null;\r\n\r\n    // Extract data from the results object\r\n    const { userRoute, shortestPath, shortestDistance, alternativeRoutes } = results;\r\n\r\n    // Prepare the rows for the table\r\n    const userRouteRow = userRoute\r\n        ? {\r\n              route: userRoute.route.join(' -> '),\r\n              distance: userRoute.distance,\r\n          }\r\n        : null;\r\n\r\n    const shortestPathRow = {\r\n        route: shortestPath.join(' -> '),\r\n        distance: shortestDistance,\r\n    };\r\n\r\n    const sortedAlternativeRoutes = alternativeRoutes\r\n        .sort((a, b) => a.distance - b.distance)\r\n        .slice(0, 5) // Limit to 5 alternative routes\r\n        .map((route, index) => ({\r\n            route: route.route.join(' -> '),\r\n            distance: route.distance,\r\n        }));\r\n\r\n    // Combine all rows\r\n    const tableRows = [\r\n        ...(userRouteRow ? [userRouteRow] : []),\r\n        shortestPathRow,\r\n        ...sortedAlternativeRoutes,\r\n    ];\r\n\r\n    return (\r\n        <div className=\"result-table\">\r\n            <h2>Route Results</h2>\r\n            <div className=\"table-container\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Route</th>\r\n                            <th>Distance (miles)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableRows.slice(0, 7).map((row, index) => (\r\n                            <tr key={index}>\r\n                                <td>{row.route}</td>\r\n                                <td>{row.distance.toFixed(2)}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}