{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\boyea\\\\OneDrive - Milwaukee School of Engineering\\\\Desktop\\\\Findings\\\\Bellford2\\\\BELLMAN-FORD-ALGORITHM\\\\FrontEnd\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  // Adjust width as needed\n  height: '400px',\n  border: '1px solid #ccc',\n  borderRadius: '8px'\n};\nconst center = {\n  lat: 39.8283,\n  // Center of the contiguous US\n  lng: -98.5795\n};\nfunction Map({\n  route\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n\n    // Set the initial bounds to the United States\n    const initialBounds = new window.google.maps.LatLngBounds({\n      lat: 24.396308,\n      lng: -125.0\n    },\n    // Southwest corner\n    {\n      lat: 49.384358,\n      lng: -66.93457\n    } // Northeast corner\n    );\n    map.fitBounds(initialBounds);\n  }, []);\n  useEffect(() => {\n    // Dynamically fit bounds to the route if it exists\n    if (route && route.length > 0 && mapRef.current) {\n      const bounds = new window.google.maps.LatLngBounds();\n      route.forEach(airport => {\n        bounds.extend({\n          lat: airport.lat,\n          lng: airport.long\n        });\n      });\n      mapRef.current.fitBounds(bounds);\n    }\n  }, [route]);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAWKY1m0h2NlZh6_WBgowVA87u516kWVfQ\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 4 // Default zoom for the initial view\n      ,\n      onLoad: onLoad,\n      options: {\n        // Allow zooming and dragging without restrictions\n        restriction: undefined\n      },\n      children: route && route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        path: route.map(airport => ({\n          lat: airport.lat,\n          lng: airport.long\n        })),\n        options: {\n          strokeColor: '#0000FF',\n          strokeOpacity: 0.7,\n          strokeWeight: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"QIUekN8ZhrlpA0OnVomt0KKazus=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useCallback","useRef","useEffect","GoogleMap","LoadScript","Polyline","jsxDEV","_jsxDEV","containerStyle","width","height","border","borderRadius","center","lat","lng","Map","route","_s","mapRef","onLoad","map","current","initialBounds","window","google","maps","LatLngBounds","fitBounds","length","bounds","forEach","airport","extend","long","googleMapsApiKey","children","mapContainerStyle","zoom","options","restriction","undefined","path","strokeColor","strokeOpacity","strokeWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/boyea/OneDrive - Milwaukee School of Engineering/Desktop/Findings/Bellford2/BELLMAN-FORD-ALGORITHM/FrontEnd/src/components/Map.jsx"],"sourcesContent":["import React, { useCallback, useRef, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Polyline } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '100%', // Adjust width as needed\r\n    height: '400px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n};\r\n\r\nconst center = {\r\n    lat: 39.8283, // Center of the contiguous US\r\n    lng: -98.5795,\r\n};\r\n\r\nfunction Map({ route }) {\r\n    const mapRef = useRef(null);\r\n\r\n    const onLoad = useCallback((map) => {\r\n        mapRef.current = map;\r\n\r\n        // Set the initial bounds to the United States\r\n        const initialBounds = new window.google.maps.LatLngBounds(\r\n            { lat: 24.396308, lng: -125.0 }, // Southwest corner\r\n            { lat: 49.384358, lng: -66.93457 } // Northeast corner\r\n        );\r\n        map.fitBounds(initialBounds);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Dynamically fit bounds to the route if it exists\r\n        if (route && route.length > 0 && mapRef.current) {\r\n            const bounds = new window.google.maps.LatLngBounds();\r\n            route.forEach((airport) => {\r\n                bounds.extend({ lat: airport.lat, lng: airport.long });\r\n            });\r\n            mapRef.current.fitBounds(bounds);\r\n        }\r\n    }, [route]);\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"AIzaSyAWKY1m0h2NlZh6_WBgowVA87u516kWVfQ\">\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={center}\r\n                zoom={4} // Default zoom for the initial view\r\n                onLoad={onLoad}\r\n                options={{\r\n                    // Allow zooming and dragging without restrictions\r\n                    restriction: undefined,\r\n                }}\r\n            >\r\n                {/* Draw route if available */}\r\n                {route && route.length > 0 && (\r\n                    <Polyline\r\n                        path={route.map((airport) => ({\r\n                            lat: airport.lat,\r\n                            lng: airport.long,\r\n                        }))}\r\n                        options={{\r\n                            strokeColor: '#0000FF',\r\n                            strokeOpacity: 0.7,\r\n                            strokeWeight: 5,\r\n                        }}\r\n                    />\r\n                )}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}